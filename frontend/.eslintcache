[{"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\index.js":"1","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\App.js":"3","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\Header.js":"5","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\products.js":"7","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\Product.js":"8","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\Rating.js":"9","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\ProductScreen.js":"10","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\store.js":"11","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\reducers\\productReducers.js":"12","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\constants\\productConstants.js":"13","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\actions\\productActions.js":"14","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\Loader.js":"15","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\Message.js":"16","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\CartScreen.js":"17","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\reducers\\cartReducers.js":"18","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\constants\\cartConstants.js":"19","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\actions\\cartActions.js":"20","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\reducers\\userReducers.js":"21","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\constants\\userConstants.js":"22","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\LoginScreen.js":"23","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\actions\\userActions.js":"24","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\FormContainer.js":"25","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\RegisterScreen.js":"26","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\ProfileScreen.js":"27","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\ShippingScreen.js":"28","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\CheckoutSteps.js":"29","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\PaymentScreen.js":"30","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\PlaceOrderScreen.js":"31","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\reducers\\orderReducers.js":"32","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\constants\\orderConstants.js":"33","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\actions\\orderActions.js":"34","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\OrderScreen.js":"35"},{"size":619,"mtime":1638645333067,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":1573,"mtime":1640029910086,"results":"39","hashOfConfig":"37"},{"size":349,"mtime":1638530924008,"results":"40","hashOfConfig":"37"},{"size":2140,"mtime":1639000961735,"results":"41","hashOfConfig":"37"},{"size":1216,"mtime":1638676849196,"results":"42","hashOfConfig":"37"},{"size":2607,"mtime":1638557155536,"results":"43","hashOfConfig":"37"},{"size":1045,"mtime":1638672686498,"results":"44","hashOfConfig":"37"},{"size":2036,"mtime":1638555562092,"results":"45","hashOfConfig":"37"},{"size":5982,"mtime":1638774819145,"results":"46","hashOfConfig":"37"},{"size":1758,"mtime":1640032914286,"results":"47","hashOfConfig":"37"},{"size":1140,"mtime":1638736667101,"results":"48","hashOfConfig":"37"},{"size":366,"mtime":1638677441234,"results":"49","hashOfConfig":"37"},{"size":1358,"mtime":1638851648801,"results":"50","hashOfConfig":"37"},{"size":480,"mtime":1638676251000,"results":"51","hashOfConfig":"37"},{"size":240,"mtime":1638676626388,"results":"52","hashOfConfig":"37"},{"size":4721,"mtime":1638828578046,"results":"53","hashOfConfig":"37"},{"size":1541,"mtime":1639414776356,"results":"54","hashOfConfig":"37"},{"size":294,"mtime":1639414361213,"results":"55","hashOfConfig":"37"},{"size":1363,"mtime":1639071013669,"results":"56","hashOfConfig":"37"},{"size":2457,"mtime":1639004650771,"results":"57","hashOfConfig":"37"},{"size":910,"mtime":1639004561379,"results":"58","hashOfConfig":"37"},{"size":2838,"mtime":1638910696385,"results":"59","hashOfConfig":"37"},{"size":4537,"mtime":1639004761031,"results":"60","hashOfConfig":"37"},{"size":398,"mtime":1638887573577,"results":"61","hashOfConfig":"37"},{"size":4359,"mtime":1638997488515,"results":"62","hashOfConfig":"37"},{"size":4976,"mtime":1639004232507,"results":"63","hashOfConfig":"37"},{"size":3531,"mtime":1639028719380,"results":"64","hashOfConfig":"37"},{"size":1663,"mtime":1639028757890,"results":"65","hashOfConfig":"37"},{"size":1898,"mtime":1639071167251,"results":"66","hashOfConfig":"37"},{"size":6753,"mtime":1639414209066,"results":"67","hashOfConfig":"37"},{"size":2166,"mtime":1640032876310,"results":"68","hashOfConfig":"37"},{"size":622,"mtime":1640031031238,"results":"69","hashOfConfig":"37"},{"size":3279,"mtime":1640034864868,"results":"70","hashOfConfig":"37"},{"size":6196,"mtime":1640096468686,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1b6vhy3",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\index.js",[],["150","151"],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\App.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\Header.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\HomeScreen.js",["152"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\n\r\nfunction HomeScreen() {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products } = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Prueba nuestros deliciosos pasteles</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant=\"danger\">{error}</Message>\r\n                    :\r\n                    <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3} >\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\products.js",[],["153","154"],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\Product.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\store.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\Message.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\actions\\userActions.js",["155"],"import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n\r\n    }\r\n}","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\ProfileScreen.js",["156"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Las contraseñas no coinciden')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password,\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>PERFIL DE USUARIO</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label className='my-2'>NOMBRE</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Nombre'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            className='my-2'\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label className='my-2'>CORREO ELECTRÓNICO</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Ingrese su correo'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            className='my-2'\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label className='my-2'>CONTRASEÑA</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Ingrese su contraseña'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            className='my-2'\r\n\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label className='my-2'>CONFIRMAR CONTRASEÑA</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirme  su contraseña'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            className='my-2'\r\n\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button className='my-3' type='submit' variant='secondary'>\r\n                        ACTUALIZAR\r\n                    </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n\r\n            <Col md={9}>\r\n                <h2>MIS ÓRDENES</h2>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\ShippingScreen.js",["157"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setsetCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>ENVÍO</h1>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label className='my-2'>NOMBRE</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Ingrese su dirección'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        className='my-2'\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label className='my-2'>CIUDAD</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Ciudad'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                        className='my-2'\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label className='my-2'>CÓDIGO POSTAL</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Código Postal'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                        className='my-2'\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label className='my-2'>PAÍS</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='País'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setsetCountry(e.target.value)}\r\n                        className='my-2'\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='info' className='my-2 fit-btn'>\r\n                    SIGUIENTE\r\n\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\PaymentScreen.js",["158"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/ship')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label>Seleccione el método de pago</Form.Label>\r\n                    <Col>\r\n                        <Form.Check //agregar mas etiquetas conforme existan mas opciones\r\n                            type='radio'\r\n                            label='Paypal o Tarjeta de crédito' id='paypal'\r\n                            name='paymentMethod'\r\n                            checked //remove when multiple options available\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                            className='my-2'\r\n                        >\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='info' className=' my-2'>\r\n                    CONTINUAR\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\PlaceOrderScreen.js",["159","160"],"import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 500 ? 0 : 100).toFixed(2)\r\n    cart.taxPrice = Number((0.16) * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>ENVÍO</h2>\r\n\r\n                            <p>\r\n                                <strong>Enviar a: </strong>\r\n                                {cart.shippingAddress.address},\r\n                                {' '}\r\n                                {cart.shippingAddress.city},\r\n                                {' '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>MÉTODO DE PAGO</h2>\r\n\r\n                            <p>\r\n                                <strong>Método: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>ARTÍCULOS</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                El carrito se encuentra vacío\r\n\r\n                            </Message> : (\r\n\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n\r\n\r\n                            )}\r\n\r\n                        </ListGroup.Item>\r\n\r\n\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>RESUMEN DE LA ÓRDEN</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Artículos:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Envío:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>IVA:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='fit-btn'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    CONFIRMAR ORDEN\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\actions\\orderActions.js",["161"],"C:\\Users\\cheri\\Desktop\\PythonProjects\\ecommerce\\frontend\\src\\screens\\OrderScreen.js",["162","163"],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"164","replacedBy":"172"},{"ruleId":"166","replacedBy":"173"},{"ruleId":"168","severity":1,"message":"174","line":21,"column":5,"nodeType":"170","messageId":"171","endLine":21,"endColumn":30},{"ruleId":"168","severity":1,"message":"175","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":14},{"ruleId":"168","severity":1,"message":"176","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"176","line":1,"column":27,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"178","line":34,"column":8,"nodeType":"179","endLine":34,"endColumn":26,"suggestions":"180"},{"ruleId":"168","severity":1,"message":"181","line":14,"column":5,"nodeType":"170","messageId":"171","endLine":14,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"182","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":16},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["183"],["184"],"'USER_UPDATE_PROFILE_RESET' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["185"],"'ORDER_PAY_RESET' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"188","text":"189"},[1300,1318],"[success, history, order._id, dispatch]"]